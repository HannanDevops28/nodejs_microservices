pipeline {
  agent any
  tools { nodejs 'NodeJS 18' }

  environment {
    IMAGE_NAME    = 'user-service'
    AWS_REGION    = 'ap-south-1'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'dev', url: 'https://github.com/HannanDevops28/nodejs_microservices.git'
      }
    }
    stage('Install') {
      steps {
        sh 'cd microservices-project/user-service && npm install'
      }
    }
    stage('Build') {
      steps {
        sh 'cd microservices-project/user-service && docker build -t $IMAGE_NAME .'
      }
    }
   stage('ECR Login & Push') {
  steps {
    withAWS(credentials: 'aws-ecr-creds', region: "${AWS_REGION}") {
      sh '''
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        ECR_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME
        docker tag $IMAGE_NAME:latest $ECR_URL:latest
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URL
        docker push $ECR_URL:latest
      '''
    }
  }
}


    stage('Deploy with Ansible') {
      steps {
        sh '''
          INSTANCE_IP=$(terraform -chdir=infra/terraform output -raw instance_ip)
          ansible-playbook -i infra/ansible/inventory.ini infra/ansible/playbook.yml --extra-vars "ecr_repo_url=$ECR_URL image_name=$IMAGE_NAME instance_ip=$INSTANCE_IP"
        '''
      }
    }
  }
}


